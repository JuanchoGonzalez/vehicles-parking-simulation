Coupled
    {
    Type = Root
    Name = modelo_prueba
    Ports = 0; 0
    Description = 
    Graphic
        {
        Position = 0; 0
        Dimension = 600; 600
        Direction = Right
        Color = 15
        Icon = 
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Atomic
            {
            Name = GeneradorArribos
            Ports = 0 ; 1
            Path = sources/generador_arribos.h
            Description = 
            Graphic
                {
                Position = -10905 ; -5580
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                MEDIA = Val; 10 ; Media de la distribucion exponencial mediante la cual se generan los arribos.
                SEMILLA = Val; 42 ; Semilla para el generador de numeros aleatorios.
                }
            }
        Atomic
            {
            Name = Controlador
            Ports = 4 ; 3
            Path = sources/controlador.h
            Description = Atomic DEVS model
            Graphic
                {
                Position = -5055 ; -3330
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                c = Val; 0 ; Cantidad de vehiculos que hay dentro del estacionamiento al momento de iniciar la simualcion.
                capacidad_maxima = Val; 30 ; Capacidad maxima de vehiculos dentro del estacionamiento.
                min_tiempo_respuesta = Val; 0 ; Tiempo minimo que tarda el controlador en dar una respuesta.
                max_tiempo_respuesta = Val; 3 ; Tiempo maximo que tarda el controlador en dar una respuesta.
                }
            }
        Atomic
            {
            Name = SensorEntrada
            Ports = 1 ; 1
            Path = sources/sensor_entrada.h
            Description = Atomic DEVS model
            Graphic
                {
                Position = -8805 ; -4830
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                tiempo_espera_entrada = Val; 1 ; Tiempo que esperara el sensor antes de detectar un vehiculo.
                }
            }
        Atomic
            {
            Name = BarreraEntrada
            Ports = 2 ; 2
            Path = sources/barrera_entrada.h
            Description = Atomic DEVS model
            Graphic
                {
                Position = -10080 ; -2430
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                apertura_barrera_entrada = Val; 4 ; Tiempo que tarda la barrera en subir.
                cierre_barrera_entrada = Val; 4 ; Tiempo que tarda la barrera en bajar.
                min_cruce_e = Val; 1 ; Tiempo minimo que tarda el vehiculo en cruzar.
                max_cruce_e = Val; 3 ; Tiempo maximo que tarda en cruzar el vehiculo.
                min_salida_e = Val; 0 ; Tiempo minimo que tarda en irse el vehiculo.
                max_salida_e = Val; 2 ; Tiempo maximo que tarda en irse el vehiculo.
                }
            }
        Atomic
            {
            Name = Estacionamiento
            Ports = 1 ; 1
            Path = sources/estacionamiento.h
            Description = Atomic DEVS model
            Graphic
                {
                Position = 1170 ; -3030
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                min_tiempo_permanencia = Val; 120 ; Tiempo minimo que va a estar un vehiculo dentro del estacionamiento.
                max_tiempo_permanencia = Val; 300 ; Tiempo maximo que va a estar un vehiculo dentro del estacionamiento.
                }
            }
        Atomic
            {
            Name = SensorSalida
            Ports = 1 ; 1
            Path = sources/sensor_salida.h
            Description = Atomic DEVS model
            Graphic
                {
                Position = -1305 ; -4935
                Dimension = 675 ; 720
                Direction = Left
                Color = 15
                Icon = None
                }
            Parameters
                {
                tiempo_espera_salida = Val; 1 ; Tiempo que esperara el sensor antes de detectar un vehiculo.
                }
            }
        Atomic
            {
            Name = BarreraSalida
            Ports = 1 ; 1
            Path = sources/barrera_salida.h
            Description = Atomic DEVS model
            Graphic
                {
                Position = -1305 ; -1560
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                apertura_barrera_salida = Val; 4 ; Tiempo que tarda la barrera en subir.
                cierre_barrera_salida = Val; 4 ; Tiempo que tarda la barrera en bajar
                min_cruce_s = Val; 1 ; Tiempo minimo que tarda el vehiculo en cruzar.
                max_cruce_s = Val; 3 ; Tiempo maximo que tarda el vehiculo en cruzar.
                }
            }
        Atomic
            {
            Name = generador_arribos.csv
            Ports = 1 ; 0
            Path = sinks\to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = -10230 ; -8730
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; generador_arribos.csv ; file name
                }
            }
        Atomic
            {
            Name = fin_sensor_entrada.csv
            Ports = 1 ; 0
            Path = sinks/to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = -8205 ; -7605
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; fin_sensor_entrada.csv ; file name
                }
            }
        Atomic
            {
            Name = fin_barrera_entrada.csv
            Ports = 1 ; 0
            Path = sinks\to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = -8130 ; -1830
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; fin_barrera_entrada.csv ; file name
                }
            }
        Atomic
            {
            Name = fin_sensor_salida.csv
            Ports = 1 ; 0
            Path = sinks\to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = -1230 ; -6630
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; fin_sensor_salida.csv ; file name
                }
            }
        Atomic
            {
            Name = estacionamiento.csv
            Ports = 1 ; 0
            Path = sinks\to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = 3570 ; -3030
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; estacionamiento.csv ; file name
                }
            }
        Atomic
            {
            Name = fin_barrera_salida.csv
            Ports = 1 ; 0
            Path = sinks\to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = 870 ; -1530
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; fin_barrera_salida.csv ; file name
                }
            }
        Atomic
            {
            Name = Monitor
            Ports = 4 ; 0
            Path = sources/monitor.h
            Description = Atomic DEVS model
            Graphic
                {
                Position = -5055 ; 120
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                porcentaje_liveness = Val; 10 ; Porcentaje para verificar la propiedad numero 3 de liveness.
                }
            }
        Atomic
            {
            Name = rechazados.csv
            Ports = 1 ; 0
            Path = sinks/to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = -8955 ; -105
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; rechazados.csv ; file name
                }
            }
        Atomic
            {
            Name = inicio_barrera_entrada.csv
            Ports = 1 ; 0
            Path = sinks/to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = -2355 ; -8130
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; inicio_barrera_entrada.csv ; file name
                }
            }
        Atomic
            {
            Name = inicio_barrera_salida.csv
            Ports = 1 ; 0
            Path = sinks\to_disk.h
            Description = Save the values (event,t) in a file.
            Graphic
                {
                Position = -4530 ; -1755
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%todisk.svg
                }
            Parameters
                {
                File = Str; inicio_barrera_salida.csv ; file name
                }
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ;  3 ;  1 ; -1
            PointX = -10125 ; -9675 ; -9675 ; -8940
            PointY = -5250 ; -5250 ; -4500 ; -4500
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Cmp ;  4 ;  1 ; -1
            PointX = -4275 ; -3675 ; -3675 ; -11550 ; -11550 ; -10215
            PointY = -3150 ; -3150 ; -9000 ; -9000 ; -2250 ; -2250
            }
        Line
            {
            Source = Cmp ;  2 ;  2 ; 0
            Sink = Cmp ;  4 ;  2 ; -1
            PointX = -4275 ; -4275 ; -3450 ; -3450 ; -11850 ; -11850 ; -10215
            PointY = -3000 ; -3000 ; -3000 ; -9300 ; -9300 ; -1950 ; -1950
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ;  8 ;  1 ; -1
            PointX = -10125 ; -9675 ; -9675 ; -11100 ; -11100 ; -10365
            PointY = -5250 ; -5250 ; -5925 ; -5925 ; -8400 ; -8400
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Cmp ;  2 ;  1 ; -1
            PointX = -8025 ; -7725 ; -7725 ; -5190
            PointY = -4500 ; -4500 ; -3225 ; -3225
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Cmp ;  6 ;  1 ; -1
            PointX = 1950 ; 2250 ; 2250 ; -510
            PointY = -2700 ; -2700 ; -4575 ; -4575
            }
        Line
            {
            Source = Cmp ;  6 ;  1 ; 0
            Sink = Cmp ;  2 ;  2 ; -1
            PointX = -1425 ; -6075 ; -6075 ; -5190
            PointY = -4575 ; -4575 ; -3075 ; -3075
            }
        Line
            {
            Source = Cmp ;  2 ;  3 ; 0
            Sink = Cmp ;  7 ;  1 ; -1
            PointX = -4275 ; -4275 ; -3450 ; -3450 ; -1440
            PointY = -2775 ; -2775 ; -2775 ; -1200 ; -1200
            }
        Line
            {
            Source = Cmp ;  7 ;  1 ; 0
            Sink = Cmp ;  2 ;  4 ; -1
            PointX = -525 ; 0 ; 0 ; -6075 ; -6075 ; -5190
            PointY = -1200 ; -1200 ; -375 ; -375 ; -2775 ; -2775
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Cmp ;  9 ;  1 ; -1
            PointX = -8025 ; -8025 ; -7725 ; -7725 ; -8925 ; -8925 ; -8340
            PointY = -4500 ; -4500 ; -4500 ; -5850 ; -5850 ; -7275 ; -7275
            }
        Line
            {
            Source = Cmp ;  6 ;  1 ; 0
            Sink = Cmp ;  11 ;  1 ; -1
            PointX = -1425 ; -2025 ; -2025 ; -1365
            PointY = -4575 ; -4575 ; -6300 ; -6300
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Cmp ;  12 ;  1 ; -1
            PointX = 1950 ; 1950 ; 3435
            PointY = -2700 ; -2700 ; -2700
            }
        Line
            {
            Source = Cmp ;  7 ;  1 ; 0
            Sink = Cmp ;  13 ;  1 ; -1
            PointX = -525 ; -525 ; 735
            PointY = -1200 ; -1200 ; -1200
            }
        Line
            {
            Source = Cmp ;  4 ;  2 ; 0
            Sink = Cmp ;  2 ;  3 ; -1
            PointX = -9300 ; -6750 ; -6750 ; -5190
            PointY = -1950 ; -1950 ; -2925 ; -2925
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  2 ;  3 ; -1
            PointX = -9300 ; -7875 ; -7875 ; -5190
            PointY = -2250 ; -2250 ; -2925 ; -2925
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  5 ;  1 ; -1
            PointX = -9300 ; -1275 ; -1275 ; 1035
            PointY = -2250 ; -2250 ; -2700 ; -2700
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  10 ;  1 ; -1
            PointX = -9300 ; -8925 ; -8925 ; -8265
            PointY = -2250 ; -2250 ; -1500 ; -1500
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  14 ;  1 ; -1
            PointX = -9300 ; -6975 ; -6975 ; -5190
            PointY = -2250 ; -2250 ; 225 ; 225
            }
        Line
            {
            Source = Cmp ;  7 ;  1 ; 0
            Sink = Cmp ;  14 ;  2 ; -1
            PointX = -525 ; 150 ; 150 ; -6075 ; -6075 ; -5190
            PointY = -1200 ; -1200 ; -75 ; -75 ; 375 ; 375
            }
        Line
            {
            Source = Cmp ;  4 ;  2 ; 0
            Sink = Cmp ;  14 ;  3 ; -1
            PointX = -9300 ; -7200 ; -7200 ; -5190
            PointY = -1950 ; -1950 ; 525 ; 525
            }
        Line
            {
            Source = Cmp ;  4 ;  2 ; 0
            Sink = Cmp ;  15 ;  1 ; -1
            PointX = -9300 ; -9090 ; -9090
            PointY = -1950 ; -1950 ; 225
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Cmp ;  14 ;  4 ; -1
            PointX = 1950 ; 2250 ; 2250 ; -6450 ; -6450 ; -5190
            PointY = -2700 ; -2700 ; 1500 ; 1500 ; 675 ; 675
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Cmp ;  16 ;  1 ; -1
            PointX = -4275 ; -3225 ; -3225 ; -2490
            PointY = -3150 ; -3150 ; -7800 ; -7800
            }
        Line
            {
            Source = Cmp ;  2 ;  3 ; 0
            Sink = Cmp ;  17 ;  1 ; -1
            PointX = -4275 ; -4050 ; -4050 ; -5175 ; -5175 ; -4665
            PointY = -2775 ; -2775 ; -1875 ; -1875 ; -1425 ; -1425
            }
        }
    }
